// ====
// Mixins
// ====


// Sizing
// ---

@function rem($sizeValue) {
    @return ($sizeValue / 16) + rem;
}

@function em($sizeValue, $context) {
    @return ($sizeValue / $context) + em;

}


// Visually hidden / invisible / clearfix
// ---

@mixin h5bp-helpers {

  .hidden { @include h5bp-hidden; }

  .visuallyhidden { @include visuallyhidden; }

  .invisible { @include h5bp-invisible; }

  .clearfix { @include clearfix; }

}

// Hide from both screenreaders and browsers:
// http://juicystudio.com/article/screen-readers-display-none.php
@mixin h5bp-hidden {
  display: none !important;
  visibility: hidden;
}

// Hide only visually, but have it available for screenreaders:
// http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;

  // Extends the .visuallyhidden class to allow the element to be focusable
  // when navigated to via the keyboard: https://www.drupal.org/node/897638
  &.focusable:active,
  &.focusable:focus {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto;
  }
}

// Hide visually and from screenreaders, but maintain layout
@mixin h5bp-invisible {
  visibility: hidden;
}

// Clearfix: contain floats
//
// For modern browsers
// 1. The space content is one way to avoid an Opera bug when the
//    `contenteditable` attribute is included anywhere else in the document.
//    Otherwise it causes space to appear at the top and bottom of elements
//    that receive the `clearfix` class.
// 2. The use of `table` rather than `block` is only necessary if using
//    `:before` to contain the top-margins of child elements.
@mixin clearfix {
  &:before,
  &:after {
    content: " "; // 1
    display: table; // 2
  }

  &:after {
    clear: both;
  }
}


/* Sass Mixin that generates a Baseline Grid */
/* by: Mike Morrison, Soholaunch.com */
/* You don't have to leave this credit comment in, but it would be nice of you. */

// Set your grid dimensions here
//$body-width: 100%;
$baseline: 12px;
@mixin baseline-grid {
	$columns: 6;
	$column-color: rgba(200,0,0,.8);
	$baseline-color: rgba(56,255,255,.8);

	// These are all automatically calculated
	$gutter-width: 24px;  // Change if you like
	//$gutters: ($columns - 1);
	$column-width: (100 / 6) * 1%;

	background-image: -webkit-linear-gradient(0deg, $column-color calc(100% - #{$gutter-width}), transparent $gutter-width),
							-webkit-linear-gradient(top, rgba(0,0,0,0) 95%, $baseline-color 100%);
	background-size: calc(#{$column-width} + #{$gutter-width / $columns}) 100%, 100% $baseline;
	background-position: 0 0px; // Use to offset and center your grid
}
